/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.metodosdeestudio;

import java.awt.Color;

/**
 *
 * @author Juan Lopera
 */
public class Notas extends javax.swing.JFrame {

    /**
     * Creates new form Auditivo
     */
    public Notas() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Label1 = new javax.swing.JLabel();
        Label2 = new javax.swing.JLabel();
        b_nota1 = new javax.swing.JButton();
        b_nota2 = new javax.swing.JButton();
        b_nota3 = new javax.swing.JButton();
        b_volver = new javax.swing.JButton();
        b_nota5 = new javax.swing.JButton();
        b_nota4 = new javax.swing.JButton();
        comingfrom = new javax.swing.JLabel();
        nota1content = new javax.swing.JLabel();
        nota2content = new javax.swing.JLabel();
        nota3content = new javax.swing.JLabel();
        nota4content = new javax.swing.JLabel();
        nota5content = new javax.swing.JLabel();
        tema = new javax.swing.JLabel();
        tone = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("metodoauditivo"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 768));

        Label1.setFont(new java.awt.Font("Sitka Small", 1, 36)); // NOI18N
        Label1.setText("NOTAS");

        Label2.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        Label2.setText("Tomar notas es esencial para recordar, organizar y comprender informaci√≥n clave.");

        b_nota1.setBackground(new java.awt.Color(255, 255, 153));
        b_nota1.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_nota1.setText("NOTA #1");
        b_nota1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_nota1.setPreferredSize(new java.awt.Dimension(200, 200));
        b_nota1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nota1ActionPerformed(evt);
            }
        });

        b_nota2.setBackground(new java.awt.Color(255, 255, 153));
        b_nota2.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_nota2.setText("NOTA #2");
        b_nota2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_nota2.setPreferredSize(new java.awt.Dimension(200, 200));
        b_nota2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nota2ActionPerformed(evt);
            }
        });

        b_nota3.setBackground(new java.awt.Color(255, 255, 153));
        b_nota3.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_nota3.setText("NOTA #3");
        b_nota3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_nota3.setPreferredSize(new java.awt.Dimension(200, 200));
        b_nota3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nota3ActionPerformed(evt);
            }
        });

        b_volver.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_volver.setText("VOLVER");
        b_volver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_volverActionPerformed(evt);
            }
        });

        b_nota5.setBackground(new java.awt.Color(255, 255, 153));
        b_nota5.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_nota5.setText("NOTA #5");
        b_nota5.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_nota5.setPreferredSize(new java.awt.Dimension(200, 200));
        b_nota5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nota5ActionPerformed(evt);
            }
        });

        b_nota4.setBackground(new java.awt.Color(255, 255, 153));
        b_nota4.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_nota4.setText("NOTA #4");
        b_nota4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_nota4.setPreferredSize(new java.awt.Dimension(200, 200));
        b_nota4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_nota4ActionPerformed(evt);
            }
        });

        nota1content.setText("jLabel1");
        nota1content.setMaximumSize(new java.awt.Dimension(0, 0));
        nota1content.setMinimumSize(new java.awt.Dimension(0, 0));
        nota1content.setPreferredSize(new java.awt.Dimension(0, 0));

        nota2content.setText("jLabel1");
        nota2content.setMaximumSize(new java.awt.Dimension(0, 0));
        nota2content.setMinimumSize(new java.awt.Dimension(0, 0));
        nota2content.setPreferredSize(new java.awt.Dimension(0, 0));

        nota3content.setText("jLabel1");
        nota3content.setMaximumSize(new java.awt.Dimension(0, 0));
        nota3content.setMinimumSize(new java.awt.Dimension(0, 0));
        nota3content.setPreferredSize(new java.awt.Dimension(0, 0));

        nota4content.setText("jLabel1");
        nota4content.setMaximumSize(new java.awt.Dimension(0, 0));
        nota4content.setMinimumSize(new java.awt.Dimension(0, 0));
        nota4content.setPreferredSize(new java.awt.Dimension(0, 0));

        nota5content.setText("jLabel1");
        nota5content.setMaximumSize(new java.awt.Dimension(0, 0));
        nota5content.setMinimumSize(new java.awt.Dimension(0, 0));
        nota5content.setPreferredSize(new java.awt.Dimension(0, 0));

        tema.setText("jLabel1");
        tema.setMaximumSize(new java.awt.Dimension(0, 0));
        tema.setMinimumSize(new java.awt.Dimension(0, 0));
        tema.setPreferredSize(new java.awt.Dimension(0, 0));

        tone.setText("jLabel1");
        tone.setMaximumSize(new java.awt.Dimension(0, 0));
        tone.setMinimumSize(new java.awt.Dimension(0, 0));
        tone.setPreferredSize(new java.awt.Dimension(0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Label2)
                .addContainerGap(255, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(b_volver)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(nota1content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(77, 77, 77)
                .addComponent(comingfrom))
            .addGroup(layout.createSequentialGroup()
                .addGap(446, 446, 446)
                .addComponent(Label1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(b_nota1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(98, 98, 98)
                        .addComponent(b_nota2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(97, 97, 97)
                        .addComponent(b_nota3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(149, 149, 149)
                        .addComponent(b_nota4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addComponent(b_nota5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(110, 110, 110))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(844, Short.MAX_VALUE)
                    .addComponent(nota2content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(180, 180, 180)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(854, Short.MAX_VALUE)
                    .addComponent(nota3content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(170, 170, 170)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(864, Short.MAX_VALUE)
                    .addComponent(nota4content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(160, 160, 160)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(874, Short.MAX_VALUE)
                    .addComponent(nota5content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(150, 150, 150)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(512, 512, 512)
                    .addComponent(tema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(512, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(512, 512, 512)
                    .addComponent(tone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(512, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(b_volver)
                    .addComponent(nota1content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comingfrom))
                .addGap(18, 18, 18)
                .addComponent(Label1)
                .addGap(63, 63, 63)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_nota2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_nota3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_nota1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_nota4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_nota5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 147, Short.MAX_VALUE)
                .addComponent(Label2)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(20, 20, 20)
                    .addComponent(nota2content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(748, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(nota3content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(738, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(40, 40, 40)
                    .addComponent(nota4content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(728, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(50, 50, 50)
                    .addComponent(nota5content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(718, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(384, 384, 384)
                    .addComponent(tema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(384, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(384, 384, 384)
                    .addComponent(tone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(384, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void b_nota1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nota1ActionPerformed
        Nota1 note = new Nota1();
        
        //SEND NOTES
        note.comingfrom.setText(this.comingfrom.getText());
        note.comingfrom.setVisible(false);
        
        note.text_contenido.setText(this.nota1content.getText());
        note.text_titulo.setText(this.b_nota1.getText());
        
        note.nota1content.setText(this.nota1content.getText());
        note.nota2content.setText(this.nota2content.getText());
        note.nota3content.setText(this.nota3content.getText());
        note.nota4content.setText(this.nota4content.getText());
        note.nota5content.setText(this.nota5content.getText());

        note.nota1title.setText(this.b_nota1.getText());
        note.nota2title.setText(this.b_nota2.getText());
        note.nota3title.setText(this.b_nota3.getText());
        note.nota4title.setText(this.b_nota4.getText());
        note.nota5title.setText(this.b_nota5.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
            note.tema.setText(this.tema.getText());
            note.tone.setText(this.tone.getText());
            
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                note.getContentPane().setBackground(MyColor);
                
            }
            
        //SEND THEME AND TONE END
        
        //SEND TASKS
            note.size = size;
            note.jlistdata = new String[note.size];
            if (size != 0) {
               for (int i = 0; i<note.size; i++) {
                note.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
            
        note.show();
        dispose();
    }//GEN-LAST:event_b_nota1ActionPerformed
    
    private void b_nota2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nota2ActionPerformed
        Nota2 note = new Nota2();
        //SEND NOTES
        note.comingfrom.setText(this.comingfrom.getText());
        note.comingfrom.setVisible(false);
        
        note.text_contenido.setText(this.nota2content.getText());
        note.text_titulo.setText(this.b_nota2.getText());
        //no le sabemos profe perdon
        note.nota1content.setText(this.nota1content.getText());
        note.nota2content.setText(this.nota2content.getText());
        note.nota3content.setText(this.nota3content.getText());
        note.nota4content.setText(this.nota4content.getText());
        note.nota5content.setText(this.nota5content.getText());

        note.nota1title.setText(this.b_nota1.getText());
        note.nota2title.setText(this.b_nota2.getText());
        note.nota3title.setText(this.b_nota3.getText());
        note.nota4title.setText(this.b_nota4.getText());
        note.nota5title.setText(this.b_nota5.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
            note.tema.setText(this.tema.getText());
            note.tone.setText(this.tone.getText());
            
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                note.getContentPane().setBackground(MyColor);
                
            }
            
        //SEND THEME AND TONE END
        
        //SEND TASKS
            note.size = size;
            note.jlistdata = new String[note.size];
            if (size != 0) {
               for (int i = 0; i<note.size; i++) {
                note.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
        
        note.show();
        dispose();
    }//GEN-LAST:event_b_nota2ActionPerformed

    private void b_volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_volverActionPerformed
        String come = comingfrom.getText();
        if (come.equals("visual")) {
            //VISUAL
            Visual audi = new Visual();
            
            //SEND NOTES
            audi.nota1content.setText(this.nota1content.getText());
            audi.nota2content.setText(this.nota2content.getText());
            audi.nota3content.setText(this.nota3content.getText());
            audi.nota4content.setText(this.nota4content.getText());
            audi.nota5content.setText(this.nota5content.getText());

            audi.nota1title.setText(this.b_nota1.getText());
            audi.nota2title.setText(this.b_nota2.getText());
            audi.nota3title.setText(this.b_nota3.getText());
            audi.nota4title.setText(this.b_nota4.getText());
            audi.nota5title.setText(this.b_nota5.getText());
            //SEND NOTES END
            
            //SEND THEME AND TONE
            audi.tema.setText(this.tema.getText());
            audi.tone.setText(this.tone.getText());
            
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.WHITE);
            }
            
            //SEND THEME AND TONE END
            
            //SEND TASKS
            audi.size = size;
            audi.jlistdata = new String[audi.size];
            if (size != 0) {
               for (int i = 0; i<audi.size; i++) {
                audi.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
            audi.show();
            dispose();
        } else if (come.equals("auditivo")) {
            //AUDITIVO
            Auditivo audi = new Auditivo();
            
            //SEND NOTES
            audi.nota1content.setText(this.nota1content.getText());
            audi.nota2content.setText(this.nota2content.getText());
            audi.nota3content.setText(this.nota3content.getText());
            audi.nota4content.setText(this.nota4content.getText());
            audi.nota5content.setText(this.nota5content.getText());

            audi.nota1title.setText(this.b_nota1.getText());
            audi.nota2title.setText(this.b_nota2.getText());
            audi.nota3title.setText(this.b_nota3.getText());
            audi.nota4title.setText(this.b_nota4.getText());
            audi.nota5title.setText(this.b_nota5.getText());
            //SEND NOTES END
            
            //SEND THEME AND TONE
            audi.tema.setText(this.tema.getText());
            audi.tone.setText(this.tone.getText());
            
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.WHITE);
            }
            
            //SEND THEME AND TONE END
            
            //SEND TASKS
            audi.size = size;
            audi.jlistdata = new String[audi.size];
            if (size != 0) {
               for (int i = 0; i<audi.size; i++) {
                audi.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
            audi.show();
            dispose();
        } else if (come.equals("kinestesico")) {
            //KINESTESICO
            Kinestesico audi = new Kinestesico();
            
            //SEND NOTES
            audi.nota1content.setText(this.nota1content.getText());
            audi.nota2content.setText(this.nota2content.getText());
            audi.nota3content.setText(this.nota3content.getText());
            audi.nota4content.setText(this.nota4content.getText());
            audi.nota5content.setText(this.nota5content.getText());

            audi.nota1title.setText(this.b_nota1.getText());
            audi.nota2title.setText(this.b_nota2.getText());
            audi.nota3title.setText(this.b_nota3.getText());
            audi.nota4title.setText(this.b_nota4.getText());
            audi.nota5title.setText(this.b_nota5.getText());
            //SEND NOTES END
            
            //SEND THEME AND TONE
            audi.tema.setText(this.tema.getText());
            audi.tone.setText(this.tone.getText());
            
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                audi.getContentPane().setBackground(MyColor);
                audi.changetext(Color.WHITE);
            }
            
            //SEND THEME AND TONE END
            
            //SEND TASKS
            audi.size = size;
            audi.jlistdata = new String[audi.size];
            if (size != 0) {
               for (int i = 0; i<audi.size; i++) {
                audi.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
            audi.show();
            dispose();
        }
    }//GEN-LAST:event_b_volverActionPerformed

    private void b_nota3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nota3ActionPerformed
        Nota3 note = new Nota3();
        //SEND NOTES
        note.comingfrom.setText(this.comingfrom.getText());
        note.comingfrom.setVisible(false);
        
        note.text_contenido.setText(this.nota3content.getText());
        note.text_titulo.setText(this.b_nota3.getText());
        
        note.nota1content.setText(this.nota1content.getText());
        note.nota2content.setText(this.nota2content.getText());
        note.nota3content.setText(this.nota3content.getText());
        note.nota4content.setText(this.nota4content.getText());
        note.nota5content.setText(this.nota5content.getText());

        note.nota1title.setText(this.b_nota1.getText());
        note.nota2title.setText(this.b_nota2.getText());
        note.nota3title.setText(this.b_nota3.getText());
        note.nota4title.setText(this.b_nota4.getText());
        note.nota5title.setText(this.b_nota5.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
            note.tema.setText(this.tema.getText());
            note.tone.setText(this.tone.getText());
            
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                note.getContentPane().setBackground(MyColor);
                
            }
            
        //SEND THEME AND TONE END
        
        //SEND TASKS
            note.size = size;
            note.jlistdata = new String[note.size];
            if (size != 0) {
               for (int i = 0; i<note.size; i++) {
                note.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
        
        note.show();
        dispose();
    }//GEN-LAST:event_b_nota3ActionPerformed

    private void b_nota5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nota5ActionPerformed
        Nota5 note = new Nota5();
        //SEND NOTES
        note.comingfrom.setText(this.comingfrom.getText());
        note.comingfrom.setVisible(false);
        
        note.text_contenido.setText(this.nota5content.getText());
        note.text_titulo.setText(this.b_nota5.getText());
        
        note.nota1content.setText(this.nota1content.getText());
        note.nota2content.setText(this.nota2content.getText());
        note.nota3content.setText(this.nota3content.getText());
        note.nota4content.setText(this.nota4content.getText());
        note.nota5content.setText(this.nota5content.getText());

        note.nota1title.setText(this.b_nota1.getText());
        note.nota2title.setText(this.b_nota2.getText());
        note.nota3title.setText(this.b_nota3.getText());
        note.nota4title.setText(this.b_nota4.getText());
        note.nota5title.setText(this.b_nota5.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
            note.tema.setText(this.tema.getText());
            note.tone.setText(this.tone.getText());
            
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                note.getContentPane().setBackground(MyColor);
                
            }
            
        //SEND THEME AND TONE END
        
        //SEND TASKS
            note.size = size;
            note.jlistdata = new String[note.size];
            if (size != 0) {
               for (int i = 0; i<note.size; i++) {
                note.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
        
        note.show();
        dispose();
    }//GEN-LAST:event_b_nota5ActionPerformed

    private void b_nota4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_nota4ActionPerformed
        Nota4 note = new Nota4();
        //SEND NOTES
        note.comingfrom.setText(this.comingfrom.getText());
        note.comingfrom.setVisible(false);
        
        note.text_contenido.setText(this.nota5content.getText());
        note.text_titulo.setText(this.b_nota5.getText());
        
        note.nota1content.setText(this.nota1content.getText());
        note.nota2content.setText(this.nota2content.getText());
        note.nota3content.setText(this.nota3content.getText());
        note.nota4content.setText(this.nota4content.getText());
        note.nota5content.setText(this.nota5content.getText());

        note.nota1title.setText(this.b_nota1.getText());
        note.nota2title.setText(this.b_nota2.getText());
        note.nota3title.setText(this.b_nota3.getText());
        note.nota4title.setText(this.b_nota4.getText());
        note.nota5title.setText(this.b_nota5.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
            note.tema.setText(this.tema.getText());
            note.tone.setText(this.tone.getText());
            
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                note.getContentPane().setBackground(MyColor);
                
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                note.getContentPane().setBackground(MyColor);
                
            }
            
        //SEND THEME AND TONE END
        
        //SEND TASKS
            note.size = size;
            note.jlistdata = new String[note.size];
            if (size != 0) {
               for (int i = 0; i<note.size; i++) {
                note.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
        
        note.show();
        dispose();
    }//GEN-LAST:event_b_nota4ActionPerformed

    
    public void changetext(Color a) {
        Label1.setForeground(a);
        Label2.setForeground(a);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Notas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Notas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Notas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Notas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Notas().setVisible(true);
            }
        });
    }

    public int size = 0;
    public String[] jlistdata;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label1;
    private javax.swing.JLabel Label2;
    public javax.swing.JButton b_nota1;
    public javax.swing.JButton b_nota2;
    public javax.swing.JButton b_nota3;
    public javax.swing.JButton b_nota4;
    public javax.swing.JButton b_nota5;
    private javax.swing.JButton b_volver;
    public javax.swing.JLabel comingfrom;
    public javax.swing.JLabel nota1content;
    public javax.swing.JLabel nota2content;
    public javax.swing.JLabel nota3content;
    public javax.swing.JLabel nota4content;
    public javax.swing.JLabel nota5content;
    public javax.swing.JLabel tema;
    public javax.swing.JLabel tone;
    // End of variables declaration//GEN-END:variables
}
