/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.metodosdeestudio;

import java.awt.Color;
import javax.swing.DefaultListModel;

/**
 *
 * @author Juan Lopera
 */
public class Visual extends javax.swing.JFrame {

    /**
     * Creates new form Auditivo
     */
    public Visual() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Label1 = new javax.swing.JLabel();
        Label2 = new javax.swing.JLabel();
        Label3 = new javax.swing.JLabel();
        Label4 = new javax.swing.JLabel();
        Label5 = new javax.swing.JLabel();
        b_caracteristicasauditivo = new javax.swing.JButton();
        b_tipsauditivo = new javax.swing.JButton();
        b_planauditivo = new javax.swing.JButton();
        b_volver = new javax.swing.JButton();
        b_configuracion = new javax.swing.JButton();
        b_notas = new javax.swing.JButton();
        b_tareas = new javax.swing.JButton();
        b_alarma = new javax.swing.JButton();
        nota1content = new javax.swing.JLabel();
        nota2content = new javax.swing.JLabel();
        nota3content = new javax.swing.JLabel();
        nota4content = new javax.swing.JLabel();
        nota5content = new javax.swing.JLabel();
        nota1title = new javax.swing.JLabel();
        nota2title = new javax.swing.JLabel();
        nota3title = new javax.swing.JLabel();
        nota4title = new javax.swing.JLabel();
        nota5title = new javax.swing.JLabel();
        tema = new javax.swing.JLabel();
        tone = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlData = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("metodoauditivo"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(1024, 768));

        Label1.setFont(new java.awt.Font("Sitka Small", 1, 36)); // NOI18N
        Label1.setText("METODO VISUAL");

        Label2.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        Label2.setText("El aprendizaje visual es un estilo de aprendizaje en el cual las personas prefieren usar imagenes,");

        Label3.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        Label3.setText(" graficas, colores, y mapas para comunicar o entender una idea / concepto. Es necesario que");

        Label4.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        Label4.setText("visualicen la información para poder comprenderla, lo que llega a desarrollar una memoria");

        Label5.setFont(new java.awt.Font("Sitka Small", 0, 18)); // NOI18N
        Label5.setText("y métodos para recordar información que involucren los colores.");

        b_caracteristicasauditivo.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_caracteristicasauditivo.setText("¿Que Caracteristicas Tiene?");
        b_caracteristicasauditivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_caracteristicasauditivo.setPreferredSize(new java.awt.Dimension(200, 100));
        b_caracteristicasauditivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_caracteristicasauditivoActionPerformed(evt);
            }
        });

        b_tipsauditivo.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_tipsauditivo.setText("Tips y Consejos");
        b_tipsauditivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_tipsauditivo.setPreferredSize(new java.awt.Dimension(200, 100));
        b_tipsauditivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_tipsauditivoActionPerformed(evt);
            }
        });

        b_planauditivo.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_planauditivo.setText("Plan De Estudios");
        b_planauditivo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_planauditivo.setPreferredSize(new java.awt.Dimension(200, 100));
        b_planauditivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_planauditivoActionPerformed(evt);
            }
        });

        b_volver.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_volver.setText("VOLVER");
        b_volver.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_volverActionPerformed(evt);
            }
        });

        b_configuracion.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_configuracion.setText("CONFIGURACION");
        b_configuracion.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_configuracion.setMaximumSize(new java.awt.Dimension(134, 23));
        b_configuracion.setPreferredSize(new java.awt.Dimension(134, 23));
        b_configuracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_configuracionActionPerformed(evt);
            }
        });

        b_notas.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_notas.setText("NOTAS");
        b_notas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_notas.setMaximumSize(new java.awt.Dimension(134, 23));
        b_notas.setPreferredSize(new java.awt.Dimension(134, 23));
        b_notas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_notasActionPerformed(evt);
            }
        });

        b_tareas.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_tareas.setText("TAREAS");
        b_tareas.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_tareas.setMaximumSize(new java.awt.Dimension(134, 23));
        b_tareas.setPreferredSize(new java.awt.Dimension(134, 23));
        b_tareas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_tareasActionPerformed(evt);
            }
        });

        b_alarma.setFont(new java.awt.Font("Georgia", 0, 12)); // NOI18N
        b_alarma.setText("ALARMA");
        b_alarma.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        b_alarma.setMaximumSize(new java.awt.Dimension(134, 23));
        b_alarma.setPreferredSize(new java.awt.Dimension(134, 23));
        b_alarma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b_alarmaActionPerformed(evt);
            }
        });

        nota1content.setText("jLabel1");
        nota1content.setMaximumSize(new java.awt.Dimension(0, 0));
        nota1content.setMinimumSize(new java.awt.Dimension(0, 0));
        nota1content.setPreferredSize(new java.awt.Dimension(0, 0));

        nota2content.setText("jLabel1");
        nota2content.setMaximumSize(new java.awt.Dimension(0, 0));
        nota2content.setMinimumSize(new java.awt.Dimension(0, 0));
        nota2content.setPreferredSize(new java.awt.Dimension(0, 0));

        nota3content.setText("jLabel1");
        nota3content.setMaximumSize(new java.awt.Dimension(0, 0));
        nota3content.setMinimumSize(new java.awt.Dimension(0, 0));
        nota3content.setPreferredSize(new java.awt.Dimension(0, 0));

        nota4content.setText("jLabel1");
        nota4content.setMaximumSize(new java.awt.Dimension(0, 0));
        nota4content.setMinimumSize(new java.awt.Dimension(0, 0));
        nota4content.setPreferredSize(new java.awt.Dimension(0, 0));

        nota5content.setText("jLabel1");
        nota5content.setMaximumSize(new java.awt.Dimension(0, 0));
        nota5content.setMinimumSize(new java.awt.Dimension(0, 0));
        nota5content.setPreferredSize(new java.awt.Dimension(0, 0));

        nota1title.setText("jLabel1");
        nota1title.setMaximumSize(new java.awt.Dimension(0, 0));
        nota1title.setMinimumSize(new java.awt.Dimension(0, 0));
        nota1title.setPreferredSize(new java.awt.Dimension(0, 0));

        nota2title.setText("jLabel1");
        nota2title.setMaximumSize(new java.awt.Dimension(0, 0));
        nota2title.setMinimumSize(new java.awt.Dimension(0, 0));
        nota2title.setPreferredSize(new java.awt.Dimension(0, 0));

        nota3title.setText("jLabel1");
        nota3title.setMaximumSize(new java.awt.Dimension(0, 0));
        nota3title.setMinimumSize(new java.awt.Dimension(0, 0));
        nota3title.setPreferredSize(new java.awt.Dimension(0, 0));

        nota4title.setText("jLabel1");
        nota4title.setMaximumSize(new java.awt.Dimension(0, 0));
        nota4title.setMinimumSize(new java.awt.Dimension(0, 0));
        nota4title.setPreferredSize(new java.awt.Dimension(0, 0));

        nota5title.setText("jLabel1");
        nota5title.setMaximumSize(new java.awt.Dimension(0, 0));
        nota5title.setMinimumSize(new java.awt.Dimension(0, 0));
        nota5title.setPreferredSize(new java.awt.Dimension(0, 0));

        tema.setText("jLabel1");
        tema.setMaximumSize(new java.awt.Dimension(0, 0));
        tema.setMinimumSize(new java.awt.Dimension(0, 0));
        tema.setPreferredSize(new java.awt.Dimension(0, 0));

        tone.setText("jLabel1");
        tone.setMaximumSize(new java.awt.Dimension(0, 0));
        tone.setMinimumSize(new java.awt.Dimension(0, 0));
        tone.setPreferredSize(new java.awt.Dimension(0, 0));

        jScrollPane1.setViewportView(jlData);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(b_volver))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(b_configuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b_notas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b_tareas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(b_alarma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Label3)
                            .addComponent(Label2)
                            .addComponent(Label4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(188, 188, 188)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Label5)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(b_caracteristicasauditivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b_tipsauditivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(b_planauditivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(65, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(248, 248, 248))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(Label1)
                        .addGap(342, 342, 342))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota1content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota2content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota3content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota4content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota5content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota1title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota2title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota3title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota4title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota5title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(600, 600, 600)
                    .addComponent(tema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(424, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(600, 600, 600)
                    .addComponent(tone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(424, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(b_volver)
                .addGap(7, 7, 7)
                .addComponent(Label1)
                .addGap(73, 73, 73)
                .addComponent(Label2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Label3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Label4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Label5)
                .addGap(75, 75, 75)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_caracteristicasauditivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_tipsauditivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_planauditivo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 280, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(b_configuracion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_notas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_tareas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(b_alarma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota1content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota2content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota3content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota4content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota5content, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota1title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota2title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota3title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota4title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(nota5title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(325, 325, 325)
                    .addComponent(tema, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(443, Short.MAX_VALUE)))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(325, 325, 325)
                    .addComponent(tone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(443, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void b_caracteristicasauditivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_caracteristicasauditivoActionPerformed
        VisualCaracteristicas caracteristicas = new VisualCaracteristicas();
        //SEND NOTES
        caracteristicas.nota1content.setText(this.nota1content.getText());
        caracteristicas.nota2content.setText(this.nota2content.getText());
        caracteristicas.nota3content.setText(this.nota3content.getText());
        caracteristicas.nota4content.setText(this.nota4content.getText());
        caracteristicas.nota5content.setText(this.nota5content.getText());
        
        caracteristicas.nota1title.setText(this.nota1title.getText());
        caracteristicas.nota2title.setText(this.nota2title.getText());
        caracteristicas.nota3title.setText(this.nota3title.getText());
        caracteristicas.nota4title.setText(this.nota4title.getText());
        caracteristicas.nota5title.setText(this.nota5title.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
        caracteristicas.tema.setText(this.tema.getText());
        caracteristicas.tone.setText(this.tone.getText());
        
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                caracteristicas.getContentPane().setBackground(MyColor);
                caracteristicas.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                caracteristicas.getContentPane().setBackground(MyColor);
                caracteristicas.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                caracteristicas.getContentPane().setBackground(MyColor);
                caracteristicas.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                caracteristicas.getContentPane().setBackground(MyColor);
                caracteristicas.changetext(Color.WHITE);
            }
        //SEND THEME AND TONE END
        
        //SEND TASKS
            caracteristicas.size = size;
            caracteristicas.jlistdata = new String[caracteristicas.size];
            if (size != 0) {
               for (int i = 0; i<caracteristicas.size; i++) {
                caracteristicas.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
        
        caracteristicas.show();
        dispose();
    }//GEN-LAST:event_b_caracteristicasauditivoActionPerformed
    
    private void b_tipsauditivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_tipsauditivoActionPerformed
        VisualTips tips = new VisualTips();
        //SEND NOTES
        tips.nota1content.setText(this.nota1content.getText());
        tips.nota2content.setText(this.nota2content.getText());
        tips.nota3content.setText(this.nota3content.getText());
        tips.nota4content.setText(this.nota4content.getText());
        tips.nota5content.setText(this.nota5content.getText());
        
        tips.nota1title.setText(this.nota1title.getText());
        tips.nota2title.setText(this.nota2title.getText());
        tips.nota3title.setText(this.nota3title.getText());
        tips.nota4title.setText(this.nota4title.getText());
        tips.nota5title.setText(this.nota5title.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
        tips.tema.setText(this.tema.getText());
        tips.tone.setText(this.tone.getText());
        
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                tips.getContentPane().setBackground(MyColor);
                tips.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                tips.getContentPane().setBackground(MyColor);
                tips.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                tips.getContentPane().setBackground(MyColor);
                tips.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                tips.getContentPane().setBackground(MyColor);
                tips.changetext(Color.WHITE);
            }
        //SEND THEME AND TONE END
        
        //SEND TASKS
            tips.size = size;
            tips.jlistdata = new String[tips.size];
            if (size != 0) {
               for (int i = 0; i<tips.size; i++) {
                tips.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
        
        tips.show();
        dispose();
    }//GEN-LAST:event_b_tipsauditivoActionPerformed

    private void b_volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_volverActionPerformed
        JFramePrincipal main = new JFramePrincipal();
        //SEND NOTES
        main.nota1content.setText(this.nota1content.getText());
        main.nota2content.setText(this.nota2content.getText());
        main.nota3content.setText(this.nota3content.getText());
        main.nota4content.setText(this.nota4content.getText());
        main.nota5content.setText(this.nota5content.getText());
        main.nota1content.setVisible(false);
        main.nota2content.setVisible(false);
        main.nota3content.setVisible(false);
        main.nota4content.setVisible(false);
        main.nota5content.setVisible(false);
        
        main.nota1title.setText(this.nota1title.getText());
        main.nota2title.setText(this.nota2title.getText());
        main.nota3title.setText(this.nota3title.getText());
        main.nota4title.setText(this.nota4title.getText());
        main.nota5title.setText(this.nota5title.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
        main.tema.setText(this.tema.getText());
        main.tone.setText(this.tone.getText());
        
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                main.getContentPane().setBackground(MyColor);
                main.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                main.getContentPane().setBackground(MyColor);
                main.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                main.getContentPane().setBackground(MyColor);
                main.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                main.getContentPane().setBackground(MyColor);
                main.changetext(Color.WHITE);
            }
        //SEND THEME AND TONE END
        
        //SEND TASKS
            main.size = size;
            main.jlistdata = new String[main.size];
            if (size != 0) {
               for (int i = 0; i<main.size; i++) {
                main.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
        
        main.show();
        dispose();
    }//GEN-LAST:event_b_volverActionPerformed

    private void b_planauditivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_planauditivoActionPerformed
        VisualPlan plan = new VisualPlan();
        //SEND NOTES
        plan.nota1content.setText(this.nota1content.getText());
        plan.nota2content.setText(this.nota2content.getText());
        plan.nota3content.setText(this.nota3content.getText());
        plan.nota4content.setText(this.nota4content.getText());
        plan.nota5content.setText(this.nota5content.getText());
        
        plan.nota1title.setText(this.nota1title.getText());
        plan.nota2title.setText(this.nota2title.getText());
        plan.nota3title.setText(this.nota3title.getText());
        plan.nota4title.setText(this.nota4title.getText());
        plan.nota5title.setText(this.nota5title.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
        plan.tema.setText(this.tema.getText());
        plan.tone.setText(this.tone.getText());
        
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                plan.getContentPane().setBackground(MyColor);
                plan.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                plan.getContentPane().setBackground(MyColor);
                plan.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                plan.getContentPane().setBackground(MyColor);
                plan.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                plan.getContentPane().setBackground(MyColor);
                plan.changetext(Color.WHITE);
            }
        //SEND THEME AND TONE END
        
        //SEND TASKS
            plan.size = size;
            plan.jlistdata = new String[plan.size];
            if (size != 0) {
               for (int i = 0; i<plan.size; i++) {
                plan.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
        
        plan.show();
        dispose();
    }//GEN-LAST:event_b_planauditivoActionPerformed

    private void b_notasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_notasActionPerformed
        Notas notes = new Notas();
        //SEND NOTES
        notes.comingfrom.setText("visual");
        notes.comingfrom.setVisible(false);
        
        notes.nota1content.setText(this.nota1content.getText());
        notes.nota2content.setText(this.nota2content.getText());
        notes.nota3content.setText(this.nota3content.getText());
        notes.nota4content.setText(this.nota4content.getText());
        notes.nota5content.setText(this.nota5content.getText());
        
        notes.b_nota1.setText(this.nota1title.getText());
        notes.b_nota2.setText(this.nota2title.getText());
        notes.b_nota3.setText(this.nota3title.getText());
        notes.b_nota4.setText(this.nota4title.getText());
        notes.b_nota5.setText(this.nota5title.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
        notes.tema.setText(this.tema.getText());
        notes.tone.setText(this.tone.getText());
        
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                notes.getContentPane().setBackground(MyColor);
                notes.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                notes.getContentPane().setBackground(MyColor);
                notes.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                notes.getContentPane().setBackground(MyColor);
                notes.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                notes.getContentPane().setBackground(MyColor);
                notes.changetext(Color.WHITE);
            }
        //SEND THEME AND TONE END
        
        //SEND TASKS
            notes.size = size;
            notes.jlistdata = new String[notes.size];
            if (size != 0) {
               for (int i = 0; i<notes.size; i++) {
                notes.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
        
        notes.show();
        dispose();
    }//GEN-LAST:event_b_notasActionPerformed

    private void b_configuracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_configuracionActionPerformed
        Configuracion config = new Configuracion();
        config.comingfrom.setText("visual");
        config.comingfrom.setVisible(false);
        
        //SEND NOTES
        config.nota1content.setText(this.nota1content.getText());
        config.nota2content.setText(this.nota2content.getText());
        config.nota3content.setText(this.nota3content.getText());
        config.nota4content.setText(this.nota4content.getText());
        config.nota5content.setText(this.nota5content.getText());
        
        config.nota1title.setText(this.nota1title.getText());
        config.nota2title.setText(this.nota2title.getText());
        config.nota3title.setText(this.nota3title.getText());
        config.nota4title.setText(this.nota4title.getText());
        config.nota5title.setText(this.nota5title.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
        config.tema.setText(this.tema.getText());
        config.tone.setText(this.tone.getText());
        
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                config.getContentPane().setBackground(MyColor);
                config.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                config.getContentPane().setBackground(MyColor);
                config.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                config.getContentPane().setBackground(MyColor);
                config.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                config.getContentPane().setBackground(MyColor);
                config.changetext(Color.WHITE);
            }
        //SEND THEME AND TONE END
        
        //SEND TASKS
            config.size = size;
            config.jlistdata = new String[config.size];
            if (size != 0) {
               for (int i = 0; i<config.size; i++) {
                config.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
            
        config.show();
        dispose();
    }//GEN-LAST:event_b_configuracionActionPerformed

    private void b_alarmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_alarmaActionPerformed
        Alarma alarm = new Alarma();
        alarm.comingfrom.setText("visual");
        alarm.comingfrom.setVisible(false);
        
        //SEND NOTES
        alarm.nota1content.setText(this.nota1content.getText());
        alarm.nota2content.setText(this.nota2content.getText());
        alarm.nota3content.setText(this.nota3content.getText());
        alarm.nota4content.setText(this.nota4content.getText());
        alarm.nota5content.setText(this.nota5content.getText());
        
        alarm.nota1title.setText(this.nota1title.getText());
        alarm.nota2title.setText(this.nota2title.getText());
        alarm.nota3title.setText(this.nota3title.getText());
        alarm.nota4title.setText(this.nota4title.getText());
        alarm.nota5title.setText(this.nota5title.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
        alarm.tema.setText(this.tema.getText());
        alarm.tone.setText(this.tone.getText());
        
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                alarm.getContentPane().setBackground(MyColor);
                alarm.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                alarm.getContentPane().setBackground(MyColor);
                alarm.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                alarm.getContentPane().setBackground(MyColor);
                alarm.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                alarm.getContentPane().setBackground(MyColor);
                alarm.changetext(Color.WHITE);
            }
        //SEND THEME AND TONE END
        
        //SEND TASKS
            alarm.size = size;
            alarm.jlistdata = new String[alarm.size];
            if (size != 0) {
               for (int i = 0; i<alarm.size; i++) {
                alarm.jlistdata[i] = jlistdata[i];
            }
            }
        //END SEND TASKS
            
        alarm.show();
        dispose();
    }//GEN-LAST:event_b_alarmaActionPerformed

    private void b_tareasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b_tareasActionPerformed
        Tareas task = new Tareas();
        task.comingfrom.setText("visual");
        task.comingfrom.setVisible(false);
        
        //SEND NOTES
        task.nota1content.setText(this.nota1content.getText());
        task.nota2content.setText(this.nota2content.getText());
        task.nota3content.setText(this.nota3content.getText());
        task.nota4content.setText(this.nota4content.getText());
        task.nota5content.setText(this.nota5content.getText());
        
        task.nota1title.setText(this.nota1title.getText());
        task.nota2title.setText(this.nota2title.getText());
        task.nota3title.setText(this.nota3title.getText());
        task.nota4title.setText(this.nota4title.getText());
        task.nota5title.setText(this.nota5title.getText());
        //SEND NOTES END
        
        //SEND THEME AND TONE
        task.tema.setText(this.tema.getText());
        task.tone.setText(this.tone.getText());
        
            if (tema.getText().equals("clara")) {
                Color MyColor = new Color(235,235,235);
                task.getContentPane().setBackground(MyColor);
                task.changetext(Color.BLACK);
            } else if (tema.getText().equals("oscura")) {
                Color MyColor = new Color(34,39,44);
                task.getContentPane().setBackground(MyColor);
                task.changetext(Color.WHITE);
            } else if (tema.getText().equals("morada")) {
                Color MyColor = new Color(128, 0, 128);
                task.getContentPane().setBackground(MyColor);
                task.changetext(Color.WHITE);
            } else if (tema.getText().equals("azul")) {
                Color MyColor = new Color(85,137,249);
                task.getContentPane().setBackground(MyColor);
                task.changetext(Color.WHITE);
            }
        //SEND THEME AND TONE END
        
        //SEND TASKS
            task.size = size;
            task.jlistdata = new String[task.size];
            if (size != 0) {
               for (int i = 0; i<task.size; i++) {
                task.jlistdata[i] = jlistdata[i];
                
            }
            task.loadcontent();
            }
        //END SEND TASKS

        task.show();
        dispose();
    }//GEN-LAST:event_b_tareasActionPerformed

    public void changetext(Color a) {
        Label1.setForeground(a);
        Label2.setForeground(a);
        Label3.setForeground(a);
        Label4.setForeground(a);
        Label5.setForeground(a);
        
    }
    

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Visual.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Visual().setVisible(true);
            }
        });
    }
    
    public int size = 0;
    public String[] jlistdata;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Label1;
    private javax.swing.JLabel Label2;
    private javax.swing.JLabel Label3;
    private javax.swing.JLabel Label4;
    private javax.swing.JLabel Label5;
    private javax.swing.JButton b_alarma;
    private javax.swing.JButton b_caracteristicasauditivo;
    private javax.swing.JButton b_configuracion;
    private javax.swing.JButton b_notas;
    private javax.swing.JButton b_planauditivo;
    private javax.swing.JButton b_tareas;
    private javax.swing.JButton b_tipsauditivo;
    private javax.swing.JButton b_volver;
    public javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JList<String> jlData;
    public javax.swing.JLabel nota1content;
    public javax.swing.JLabel nota1title;
    public javax.swing.JLabel nota2content;
    public javax.swing.JLabel nota2title;
    public javax.swing.JLabel nota3content;
    public javax.swing.JLabel nota3title;
    public javax.swing.JLabel nota4content;
    public javax.swing.JLabel nota4title;
    public javax.swing.JLabel nota5content;
    public javax.swing.JLabel nota5title;
    public javax.swing.JLabel tema;
    public javax.swing.JLabel tone;
    // End of variables declaration//GEN-END:variables
}
